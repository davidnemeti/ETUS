using Nemerle;
using Nemerle.Collections;
using Nemerle.Compiler;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

namespace SchemaLanguage
{
    [Nemerle.MacroUsage (Nemerle.MacroPhase.BeforeInheritance,
                         Nemerle.MacroTargets.Assembly)]
    public macro DefineEntity(entityName : PExpr)
    {
        def ctx = Nemerle.Macros.ImplicitCTX();

        def className =
            match (entityName)
            {
                | <[ $(className : name) ]> => className
                | _ =>
                    Message.Error(entityName.Location, "Expected simple name");
                    null
            };
            
        when (ctx.IsMainPass)
        {
            def builder = ctx.Env.Define(
                <[ decl:
                    public class $(className)
                    {
                    }
                ]>
            );
        
            builder.Compile();

            def builder2 = ctx.Env.Define(
                <[ decl:
                    public class Foo
                    {
                    }
                ]>
            );
        
            builder2.Compile();
        }
    }
}
